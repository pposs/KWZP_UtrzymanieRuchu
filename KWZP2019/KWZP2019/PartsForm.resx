<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonNewPart.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="textPartsMenu.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="pictureMenu.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAAJtJREFUeF7t2DERg1AQBFAUMNFAFRXUsUmFhJTRgAIkRALczcfFvjezO1dv9WEC
        sl3XtVW+odl6gLOS6jRA17gjGcAAXeOOZIAeYK18QrM+zyEAAACy1CfhXHmFZvZDpGvckQxggK5xRzKA
        AaqOyj80x/McAgAAgCj1TbxU3qFZ/BHqGnckAxiga9yRDGCAqr3yC83+PIeASNN0A7uJG0ui5ayXAAAA
        AElFTkSuQmCC
</value>
  </data>
  <data name="btnReturnMain.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAHdElNRQfjBBATIhKz9hiSAAAC50lEQVR4Xu2ZTahNURSA
        3+v5mfgpT/IzwcCEGBhIkoESQ1IM/MwMSAyUwctAiNRLJoQpJTzKTBgbKAwkKZSS4hUheornW6u1Xttz
        b/eec8+59+579ldfa99z9l5rr9c79557bl8ikUgkEolEIpGoDOPj4x536KBKBM2fwhv6oioEzd9EYase
        qAo0PBtfaetgh3sb75O4BX9L48aInigbCnns10GbCOpOwzs4mY2oc0rBkxMX46i+aDPUPYi1+GZTyoEC
        Ho9oOdADJRKWYLwTP0ndOgzZ1HKgwBx8qqUMO1U4YWrGB3BU6jXgn3WF4AmJe6TCZPRkQYTpGK/AK1Kj
        SU7a0mIh8XS8ryVqYNMKgXSr8Ax+kNwZGLP1mqdlPBFxM/7CuujEnLB8Ke7DERzDvOy1lK1DMo/XNHUD
        dHIDmDYX16E0ewEfY1E8sTKtQSKPq/GzZG6SQziE8q97Ea/jQ3yOX7Bs5qHuPTeegHhOMkbELt14Xkjg
        Ua7Fd5IxIq7q5vNCAo9HNV1cvAh7yAWLB/GZZIsMuSGS7wHWSQZ8EXE3xsh3lLtR7SMzLJyK9zBGfuJ8
        tG6axBcQN1iSGJGPU7mX0F6axhcQL2GsvMYZqL1kgkXy8fYeY+WB9aH9ZIJF+zVFvByzPrSfzLBQnti8
        lUyRIe/0a6wH7SUXvph4HmNBnvFNQd17y3gi4lr8it2K7G1TuOdCkaTYj7ex2zhr2ywXCnnchn+kcoe5
        hYPh3toGBWfiI+wEcp0vsX3oftqOFybWe75eBpdxYVi/o/gmiItw4ne1gnmDh3EgrNlV+KaIJ7AI5HHa
        MC7TxMDYRl2Kb5C4HD9is/ib6Us8jSs1ETC2UUT4polZfpCYpYuAsY0ixpsgrscf2Ai9vnsOGhMH8K50
        WQ+b3pt4f8Tt2m0NdEIVoFd5KPHfzZOd7n28V6L8VD2BHqwa9L0A9ebJDlUL75t4XAdVJPgjaEwkEolE
        IpFIJLqBvr6/Itgn0AQ0ejYAAAAASUVORK5CYII=
</value>
  </data>
</root>